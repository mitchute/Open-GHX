import os


import simplejson as json
import ghx.array as ghx

cwd = os.getcwd()

input_path = os.path.join(cwd, "..", "examples", "1x2_Std_GHX.json")
load_path = os.path.join(cwd, "..", "examples", "1x2_Std_GHX_Sin.csv")

with open(input_path) as json_file:
    json_data = json.load(json_file)

min_hourly = [24, 48, 72, 96, 120, 144, 168, 192]

one = [
        [10],
        [50],
        [100],
        [200],
        [400],
        [600],
        [800],
        [1000]
      ]

two = [
        [10, 20],
        [20, 40],
        [30, 60],
        [40, 80],
        [50, 100],
        [60, 120],
        [70, 140],
        [80, 160],
        [90, 180],
        [100, 200]
      ]

three = [
        [10, 20, 40],
        [20, 40, 80],
        [30, 60, 120],
        [40, 80, 160],
        [50, 100, 200],
        [60, 120, 240],
        [70, 140, 280],
        [80, 160, 320],
        [90, 180, 360],
        [100, 200, 400]
        ]

four = [
        [10, 20, 40, 80],
        [20, 40, 80, 160],
        [30, 60, 120, 240],
        [40, 80, 160, 320],
        [50, 100, 200, 400],
        [60, 120, 240, 480],
        [70, 140, 280, 560],
        [80, 160, 320, 640],
        [90, 180, 360, 720],
        [100, 200, 400, 800]
       ]

five = [
        [10, 20, 40, 80, 160],
        [20, 40, 80, 160, 320],
        [30, 60, 120, 240, 480],
        [40, 80, 160, 320, 640],
        [50, 100, 200, 400, 800],
        [60, 120, 240, 480, 960],
        [70, 140, 280, 560, 1120],
        [80, 160, 320, 640, 1280],
        [90, 180, 360, 720, 1440],
        [100, 200, 400, 800, 1600]
       ]

six = [
        [10, 20, 40, 80, 160, 320],
        [20, 40, 80, 160, 320, 640],
        [30, 60, 120, 240, 480, 960],
        [40, 80, 160, 320, 640, 1280],
        [50, 100, 200, 400, 800, 1600],
        [60, 120, 240, 480, 960, 1920],
        [70, 140, 280, 560, 1120, 2240],
        [80, 160, 320, 640, 1280, 2560],
        [90, 180, 360, 720, 1440, 2880],
        [100, 200, 400, 800, 1600, 3200]
    ]

seven = [
        [10, 20, 40, 80, 160, 320, 640],
        [20, 40, 80, 160, 320, 640, 1280],
        [30, 60, 120, 240, 480, 960, 1920],
        [40, 80, 160, 320, 640, 1280, 2560],
        [50, 100, 200, 400, 800, 1600, 3200],
        [60, 120, 240, 480, 960, 1920, 3840],
        [70, 140, 280, 560, 1120, 2240, 4480],
        [80, 160, 320, 640, 1280, 2560, 5120],
        [90, 180, 360, 720, 1440, 2880, 5760],
        [100, 200, 400, 800, 1600, 3200, 6400]
        ]

eight = [
        [10, 20, 40, 80, 160, 320, 640, 1280],
        [20, 40, 80, 160, 320, 640, 1280, 2560],
        [30, 60, 120, 240, 480, 960, 1920, 3840],
        [40, 80, 160, 320, 640, 1280, 2560, 5120],
        [50, 100, 200, 400, 800, 1600, 3200, 6400],
        [60, 120, 240, 480, 960, 1920, 3840, 7680],
        [70, 140, 280, 560, 1120, 2240, 4480, 8960],
        [80, 160, 320, 640, 1280, 2560, 5120, 10240],
        [90, 180, 360, 720, 1440, 2880, 5760, 11520],
        [100, 200, 400, 800, 1600, 3200, 6400, 12800]
        ]

nine = [
        [10, 20, 40, 80, 160, 320, 640, 1280, 2560],
        [20, 40, 80, 160, 320, 640, 1280, 2560, 5120],
        [30, 60, 120, 240, 480, 960, 1920, 3840, 7680],
        [40, 80, 160, 320, 640, 1280, 2560, 5120, 10240],
        [50, 100, 200, 400, 800, 1600, 3200, 6400, 12800],
        [60, 120, 240, 480, 960, 1920, 3840, 7680, 15360],
        [70, 140, 280, 560, 1120, 2240, 4480, 8960, 17920],
        [80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480],
        [90, 180, 360, 720, 1440, 2880, 5760, 11520, 23040],
        [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600]
       ]

ten = [
        [10, 20, 40, 80, 160, 320, 640, 1280, 2560, 5120],
        [20, 40, 80, 160, 320, 640, 1280, 2560, 5120, 10240],
        [30, 60, 120, 240, 480, 960, 1920, 3840, 7680, 15360],
        [40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480],
        [50, 100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600],
        [60, 120, 240, 480, 960, 1920, 3840, 7680, 15360, 30720],
        [70, 140, 280, 560, 1120, 2240, 4480, 8960, 17920, 35840],
        [80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960],
        [90, 180, 360, 720, 1440, 2880, 5760, 11520, 23040, 46080],
        [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200]
      ]

eleven = [
        [10, 20, 40, 80, 160, 320, 640, 1280, 2560, 5120, 10240],
        [20, 40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480],
        [30, 60, 120, 240, 480, 960, 1920, 3840, 7680, 15360, 30720],
        [40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960],
        [50, 100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200],
        [60, 120, 240, 480, 960, 1920, 3840, 7680, 15360, 30720, 61440],
        [70, 140, 280, 560, 1120, 2240, 4480, 8960, 17920, 35840, 71680],
        [80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960, 81920],
        [90, 180, 360, 720, 1440, 2880, 5760, 11520, 23040, 46080, 92160],
        [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400]
         ]

twelve = [
        [10, 20, 40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480],
        [20, 40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960],
        [30, 60, 120, 240, 480, 960, 1920, 3840, 7680, 15360, 30720, 61440],
        [40, 80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960, 81920],
        [50, 100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400],
        [60, 120, 240, 480, 960, 1920, 3840, 7680, 15360, 30720, 61440, 122880],
        [70, 140, 280, 560, 1120, 2240, 4480, 8960, 17920, 35840, 71680, 143360],
        [80, 160, 320, 640, 1280, 2560, 5120, 10240, 20480, 40960, 81920, 163840],
        [90, 180, 360, 720, 1440, 2880, 5760, 11520, 23040, 46080, 92160, 184320],
        [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400, 204800]
        ]


def run(name, hist, d):
    ghx.PrintClass.log_messages = ''
    print("Set: %d-%d" % (hist, d[0]))

    dir_name = "%d-%d" % (hist, d[0])

    output_path = os.path.join(cwd, "..", "run", name, dir_name)

    if not os.path.exists(output_path):
        os.makedirs(output_path)

    json_data['Simulation Configuration']['Simulation Years'] = 10
    json_data['Simulation Configuration']['Aggregation Type'] = "Fixed"
    json_data['Simulation Configuration']['Min Hourly History'] = hist
    json_data['Simulation Configuration']['Intervals'] = d

    this_test = ghx.GHXArrayFixedAggBlocks(json_data, load_path, output_path, True)

    this_test.simulate()

for hist in min_hourly:
    for d in twelve:
        run("twelve", hist, d)
